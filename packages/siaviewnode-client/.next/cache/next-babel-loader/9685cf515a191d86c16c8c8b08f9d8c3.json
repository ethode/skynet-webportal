{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { CircularProgress } from \"@material-ui/core\";\nimport * as R from \"ramda\";\nimport { useCallback, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Box, Flex, jsx } from \"theme-ui\";\n/**\n * nginx is setup to automatically handle and rewrite the url path.\n */\n\nconst API_ENDPOINT = process.env.NODE_ENV === \"development\" ? \"http://localhost:4000\" : \"/api\";\nconst pName = R.prop(\"name\");\nconst splitFilename = R.compose(R.head, R.split(\".sia\"));\n\nfunction MyDropzone() {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: link,\n    1: setLink\n  } = useState(\"\");\n  const onDrop = useCallback(acceptedFiles => {\n    setLoading(true);\n    const file = R.head(acceptedFiles);\n    const url = API_ENDPOINT + \"/skyfile\";\n    const fd = new FormData();\n    fd.append(\"file\", file);\n    fetch(url, {\n      method: \"POST\",\n      body: fd,\n      mode: \"cors\"\n    }).then(res => {\n      return res.json();\n    }).then(({\n      skylink\n    }) => {\n      console.log(\"WE OUT HERE BOYS\", skylink);\n      setLink(`sia://${skylink}`);\n      setLoading(false);\n    }).catch(e => {\n      console.log(\"Upload error:\", e);\n      setError(\"An unexpected error occured. Check console for details.\");\n      setLoading(false);\n    });\n  }, [loading, setLoading, error, setError]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return jsx(Box, null, link ? jsx(Flex, {\n    sx: {\n      height: 400,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, jsx(\"h5\", null, link)) : jsx(Flex, _extends({}, getRootProps(), {\n    sx: {\n      height: 400,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }), jsx(\"input\", getInputProps()), isDragActive && !loading && !error && !link && jsx(\"p\", null, \"Drop file here ...\"), !isDragActive && !loading && !error && !link && jsx(\"p\", null, \"Drag 'n' drop a file here, or click to select a file\"), loading && jsx(CircularProgress, null), error && !loading && jsx(\"h5\", null, error)));\n}\n\nexport default MyDropzone;","map":null,"metadata":{},"sourceType":"module"}