{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { CircularProgress } from \"@material-ui/core\";\nimport * as R from \"ramda\";\nimport { useCallback, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Box, Flex, jsx } from \"theme-ui\";\n/**\n * nginx is setup to automatically handle and rewrite the url path.\n */\n\nvar API_ENDPOINT = process.env.NODE_ENV === \"development\" ? \"http://localhost:4000\" : \"/api\";\nvar pName = R.prop(\"name\");\nvar splitFilename = R.compose(R.head, R.split(\".sia\"));\n\nfunction MyDropzone() {\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      link = _useState3[0],\n      setLink = _useState3[1];\n\n  var onDrop = useCallback(function (acceptedFiles) {\n    setLoading(true);\n    var file = acceptedFiles[0];\n\n    if (!file) {\n      setError(\"An unexpected error occured. Check console for details.\");\n      setLoading(false);\n      return;\n    }\n\n    var url = \"\".concat(API_ENDPOINT, \"/skyfile?filename=\").concat(file.name);\n    var fd = new FormData();\n    fd.append(\"file\", file);\n    fetch(url, {\n      method: \"POST\",\n      body: fd,\n      mode: \"cors\"\n    }).then(function (res) {\n      return res.json();\n    }).then(function (_ref) {\n      var skylink = _ref.skylink;\n      console.log(\"WE OUT HERE BOYS\", skylink);\n      setLink(\"sia://\".concat(skylink));\n      setLoading(false);\n    })[\"catch\"](function (e) {\n      console.log(\"Upload error:\", e);\n      setError(\"An unexpected error occured. Check console for details.\");\n      setLoading(false);\n    });\n  }, [loading, setLoading, error, setError]);\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive;\n\n  return jsx(Box, null, link ? jsx(Flex, {\n    sx: {\n      height: 400,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, jsx(\"h5\", null, link)) : jsx(Flex, _extends({}, getRootProps(), {\n    sx: {\n      height: 400,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }), jsx(\"input\", getInputProps()), isDragActive && !loading && !error && !link && jsx(\"p\", null, \"Drop file here ...\"), !isDragActive && !loading && !error && !link && jsx(\"p\", null, \"Drag 'n' drop a file here, or click to select a file\"), loading && jsx(CircularProgress, null), error && !loading && jsx(\"h5\", null, error)));\n}\n\nexport default MyDropzone;","map":null,"metadata":{},"sourceType":"module"}